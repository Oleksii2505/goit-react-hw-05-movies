{"version":3,"file":"static/js/278.b6812318.chunk.js","mappings":"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","sources":["pages/Home/Home.styled.jsx","pages/Movies/Movies.jsx","pages/Movies/Movies.styled.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const TrendingItem = styled.li`\n  border-radius: 8px;\n  overflow: hidden;\n  background-color: #af93aa12;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  width: 352px;\n  transition-duration: 250ms;\n  transition-property: scale;\n  transition-timing-function: ease-in-out;\n  &:hover {\n    scale: 1.02;\n    box-shadow: 0px 1px 2px rgb(255 0 249 / 31%),\n      0px 2px 4px rgb(255 0 245 / 50%), 0px 4px 8px rgb(255 235 0 / 31%),\n      0px 8px 16px rgb(255 247 254 / 35%);\n  }\n`;\n\nexport const ImgThumb = styled.div`\n  width: 352px;\n  height: 528px;\n`;\n\nexport const TrendingGallery = styled.ul`\n  padding: 32px 0;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const TitleMovieThumb = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 60px;\n  padding: 16px 0;\n  text-align: center;\n  font-size: 12px;\n`;\n","import { useEffect, useState } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport Notiflix from 'notiflix';\nimport { FaSistrix } from 'react-icons/fa';\nimport { fetchMoviesBySearchWord } from 'services/api';\nimport {\n  SearchBarHeader,\n  SearchForm,\n  SearchInput,\n  SearchFormBtn,\n  SearchFormBtnLabel,\n  PosterImg,\n} from './Movies.styled';\nimport {\n  TrendingItem,\n  TrendingGallery,\n  TitleMovieThumb,\n  ImgThumb,\n} from '../Home/Home.styled';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filteredMovies, setFilteredMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQueryFromParams = searchParams.get('query');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (searchQueryFromParams === null) {\n      return;\n    }\n\n    try {\n      const getFilteredMovies = async () => {\n        const {\n          data: { results },\n        } = await fetchMoviesBySearchWord(searchQueryFromParams);\n\n        if (!results.length) {\n          Notiflix.Notify.warning(\n            'Oops, there are no movies by this search, try another title'\n          );\n        }\n        const filteredData = results.map(\n          ({ id, poster_path, original_title }) => ({\n            id,\n            poster_path,\n            original_title,\n          })\n        );\n        setFilteredMovies(filteredData);\n      };\n\n      getFilteredMovies();\n    } catch (err) {\n      console.log(err.message);\n    }\n  }, [searchQueryFromParams, searchParams]);\n\n  const onChange = ({ target }) => {\n    setSearchQuery(target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let { value } = event.target.elements.search;\n\n    setSearchQuery(value.toLowerCase().trim());\n    setSearchParams({ query: value.toLowerCase().trim() });\n\n    if (searchQuery.trim() === '') {\n      Notiflix.Notify.warning('Enter title of movie to search');\n      value = '';\n      return;\n    }\n    setSearchQuery('');\n  };\n\n  return (\n    <div>\n      <SearchBarHeader>\n        <SearchForm onSubmit={handleSubmit}>\n          <SearchFormBtn type=\"submit\" className=\"button\">\n            <FaSistrix size=\"24px\" fill=\"#fff\" />\n            <SearchFormBtnLabel className=\"button-label\">\n              Search\n            </SearchFormBtnLabel>\n          </SearchFormBtn>\n\n          <SearchInput\n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"search\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={searchQuery}\n            onChange={onChange}\n          />\n        </SearchForm>\n      </SearchBarHeader>\n\n      {filteredMovies && (\n        <TrendingGallery>\n          {filteredMovies.map(({ id, poster_path, original_title }) => {\n            return (\n              <Link to={`/movies/${id}`} state={{ from: location }} key={id}>\n                <TrendingItem>\n                  <ImgThumb>\n                    <PosterImg\n                      src={\n                        poster_path\n                          ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                          : `https://media.istockphoto.com/id/147273331/uk/%D1%84%D0%BE%D1%82%D0%BE/%D1%81%D0%B8%D0%BD%D1%94-%D0%B2%D1%96%D0%B4%D1%80%D0%BE-%D0%BF%D0%BE%D0%BF%D0%BA%D0%BE%D1%80%D0%BD%D1%83.jpg?s=2048x2048&w=is&k=20&c=EVEpgBCnZmkrieihX5eDgsssBgcGyU71woNkj5N4FiM=`\n                      }\n                      alt={original_title}\n                      width=\"352\"\n                      height=\"528\"\n                    />\n                  </ImgThumb>\n                  <TitleMovieThumb>\n                    <h2>{original_title}</h2>\n                  </TitleMovieThumb>\n                </TrendingItem>\n              </Link>\n            );\n          })}\n        </TrendingGallery>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;","import styled from '@emotion/styled';\n\nexport const SearchBarHeader = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 999;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #392b3754;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #140e1294;\n  border-radius: 8px;\n  overflow: hidden;\n`;\n\nexport const SearchFormBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-color: #5d425b;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormBtnLabel = styled.span`\n  position: absolute;\n  width: 16px;\n  height: 16px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 24px;\n  padding-right: 4px;\n  background-color: #140e1200;\n  color: #ffffff;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n    color: #ffffff;\n  }\n`;\n\nexport const PosterImg = styled.img`\n  object-fit: cover;\n`;","import axios from \"axios\";\n\nexport const KEY = 'dafb4cf758741e9fd84f5c71b8506454';\n\nexport const fetchTrendingMoviesData = async () => {\n    try {\n      return await axios.get(\n        `https://api.themoviedb.org/3/trending/movie/week?api_key=${KEY}`\n      );\n    } catch (err) {\n      console.log(err);\n    }\n};\n\nexport const fetchMovieInfo = async movieId => {\n    try {\n      return await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}&language=en-US`\n      );\n    } catch (err) {\n      console.log(err);\n    }\n};\n\nexport const fetchMoviesBySearchWord = async searchWord => {\n    try {\n      return await axios.get(\n        `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&query=${searchWord}&page=1`\n      );\n    } catch (err) {\n      console.log(err);\n    }\n};\n\nexport const fetchMovieCast = async movieId => {\n    try {\n      return await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n      );\n    } catch (err) {\n      console.log(err);\n    }\n};\n  \nexport const fetchMovieReviews = async movieId => {\n    try {\n      return await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`\n      );\n    } catch (err) {\n      console.log(err);\n    }\n};\n\n  "],"names":["TrendingItem","styled","ImgThumb","TrendingGallery","TitleMovieThumb","useState","searchQuery","setSearchQuery","filteredMovies","setFilteredMovies","useSearchParams","searchParams","setSearchParams","searchQueryFromParams","get","location","useLocation","useEffect","getFilteredMovies","fetchMoviesBySearchWord","results","data","length","Notiflix","filteredData","map","id","poster_path","original_title","err","console","log","message","onSubmit","event","preventDefault","value","target","elements","search","toLowerCase","trim","query","type","className","size","fill","autoComplete","name","autoFocus","placeholder","onChange","to","state","from","src","alt","width","height","SearchBarHeader","SearchForm","SearchFormBtn","SearchFormBtnLabel","SearchInput","PosterImg","KEY","fetchTrendingMoviesData","axios","fetchMovieInfo","movieId","searchWord","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}