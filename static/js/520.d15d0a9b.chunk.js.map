{"version":3,"file":"static/js/520.d15d0a9b.chunk.js","mappings":"4NAEaA,EAAeC,EAAAA,EAAAA,GAAH,ofAmBZC,EAASD,EAAAA,EAAAA,IAAH,sBAENE,EAAkBF,EAAAA,EAAAA,GAAH,4HAQfG,EAAgBH,EAAAA,EAAAA,IAAH,8KAUbI,EAAYJ,EAAAA,EAAAA,IAAH,kD,SCnCTK,EAAY,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,YAElCC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACR,EAAD,UACCI,EAAOK,KAAI,YAAiD,IAA9CC,EAA6C,EAA7CA,GAAIC,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,eAC/BC,EAAMT,GAAWO,EACjBG,EAAST,GAAe,MACxBU,EAASL,EAAW,0CACaA,GACnC,iGAEJ,OACE,SAACd,EAAD,WACE,UAAC,KAAD,CAAMoB,GAAE,kBAAaP,GAAMQ,MAAO,CAAEC,KAAMZ,GAA1C,WACE,SAACR,EAAD,WACE,SAACG,EAAD,CAAWkB,IAAKJ,EAAQF,IAAKA,EAAKO,MAAM,MAAMN,OAAQA,OAExD,SAACd,EAAD,WACE,wBAAKY,GAAkCD,UAN1BF,EAWtB,KAGN,C,iNC/BYY,EAAkBxB,EAAAA,EAAAA,OAAH,kcAmBfyB,EAAazB,EAAAA,EAAAA,KAAH,mLAUV0B,EAAgB1B,EAAAA,EAAAA,OAAH,+bAmBb2B,EAAqB3B,EAAAA,EAAAA,KAAH,+MAYlB4B,EAAc5B,EAAAA,EAAAA,MAAH,oU,SCnDX6B,EAAY,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACvB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAgBA,OACE,SAACT,EAAD,WACE,UAACC,EAAD,CAAYK,SAZK,SAACI,GAClBA,EAAMC,iBACqB,KAAvBH,EAAYI,OAIhBN,EAASE,GAHLK,IAAAA,OAAAA,QAAwB,iCAK/B,EAIG,WACE,UAACX,EAAD,CAAeY,KAAK,SAASC,UAAU,SAAvC,WACE,SAAC,MAAD,CAAWC,KAAK,OAAOC,KAAK,UAC5B,SAACd,EAAD,CAAoBY,UAAU,eAA9B,wBAKF,SAACX,EAAD,CACEU,KAAK,OACLI,aAAa,MACbC,KAAK,SACLC,WAAS,EACTC,YAAY,2BACZC,MAAOd,EACPe,SA/BS,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChBf,EAAee,EAAOF,MACzB,QAmCJ,ECUD,EApDe,WAEb,OAA4Bf,EAAAA,EAAAA,UAAS,IAArC,eAAOzB,EAAP,KAAe2C,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAwBF,EAAaG,IAAI,UAE/CC,EAAAA,EAAAA,YAAU,WACR,GAA8B,OAA1BF,EAIJ,IACE,IAAMG,EAAiB,mCAAG,yGAGdC,EAAAA,EAAAA,IAAwBJ,GAHV,iBAEdK,EAFc,EAEtBC,KAAQD,SAGGE,QACXvB,IAAAA,OAAAA,QACE,+DAGEwB,EAAeH,EAAQ/C,KAC3B,kBAA0C,CACxCC,GADF,EAAGA,GAEDC,YAFF,EAAOA,YAGLE,eAHF,EAAoBA,eAApB,IAMFkC,EAAUY,GAjBc,2CAAH,qDAoBvBL,GAGD,CAFC,MAAOM,GACPC,QAAQC,IAAIF,EAAIG,QACjB,CACF,GAAE,CAACZ,EAAuBF,IAM3B,OACE,4BACE,SAACtB,EAAD,CAAWC,SANM,SAAAoC,GAClBd,EAAgB,CAACc,MAAAA,GACnB,IAKI5D,IACC,SAACD,EAAA,EAAD,CAAWC,OAAQA,MAI1B,C,mMCzDK6D,EAAM,mCACZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAuB,mCAAG,uGAEpBD,EAAAA,EAAAA,IAAA,sCACoBD,IAHA,wEAMjCJ,QAAQC,IAAR,MANiC,wDAAH,qDAUvBM,EAAc,mCAAG,WAAMC,GAAN,0FAEXH,EAAAA,EAAAA,IAAA,gBACFG,EADE,oBACiBJ,EADjB,oBAFW,wEAMxBJ,QAAQC,IAAR,MANwB,wDAAH,sDAUdP,EAAuB,mCAAG,WAAMe,GAAN,0FAEpBJ,EAAAA,EAAAA,IAAA,+BACaD,EADb,iCACyCK,EADzC,YAFoB,wEAMjCT,QAAQC,IAAR,MANiC,wDAAH,sDAUvBS,EAAc,mCAAG,WAAMF,GAAN,0FAEXH,EAAAA,EAAAA,IAAA,gBACFG,EADE,4BACyBJ,EADzB,oBAFW,wEAMxBJ,QAAQC,IAAR,MANwB,wDAAH,sDAUdU,EAAiB,mCAAG,WAAMH,GAAN,0FAEdH,EAAAA,EAAAA,IAAA,gBACFG,EADE,4BACyBJ,EADzB,oBAFc,wEAM3BJ,QAAQC,IAAR,MAN2B,wDAAH,qD","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const TrendingItem = styled.li`\n  border-radius: 8px;\n  overflow: hidden;\n  background-color: #49248a;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  width: 352px;\n  transition-duration: 250ms;\n  transition-property: scale;\n  transition-timing-function: ease-in-out;\n  &:hover {\n    scale: 1.02;\n    box-shadow: 0px 1px 2px rgb(255 0 249 / 31%),\n      0px 2px 4px rgb(255 0 245 / 50%), 0px 4px 8px rgb(255 235 0 / 31%),\n      0px 8px 16px rgb(255 247 254 / 35%);\n  }\n`;\n\nexport const ImgBox = styled.div``;\n\nexport const TrendingGallery = styled.ul`\n  padding: 32px 0;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const TitleMovieBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 60px;\n  padding: 16px 0;\n  text-align: center;\n  font-size: 12px;\n`;\n\nexport const PosterImg = styled.img`\n  object-fit: cover;\n  \n`;","import { Link , useLocation } from \"react-router-dom\";\nimport { TrendingGallery, \n    TrendingItem, \n    ImgBox,\n    TitleMovieBox, PosterImg } from \"./MovieList.styled\";\n\nexport const MovieList = ({movies, altText, imageHeight}) => {\n   \n    const location = useLocation();\n    return (\n      <TrendingGallery>\n      {movies.map(({ id, poster_path, title, original_title }) => {\n        const alt = altText || title;\n        const height = imageHeight || \"528\";\n        const imgUrl = poster_path\n          ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n          : \"https://as1.ftcdn.net/v2/jpg/01/41/48/32/1000_F_141483247_cvrudefB00p8qNxoapWW54jjm3LzXFgz.jpg\";\n        \n        return (\n          <TrendingItem key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <ImgBox>\n                <PosterImg src={imgUrl} alt={alt} width=\"352\" height={height} />\n              </ImgBox>\n              <TitleMovieBox>\n                <h2>{original_title ? original_title : title}</h2>\n              </TitleMovieBox>\n            </Link>\n          </TrendingItem>\n        );\n      })}\n    </TrendingGallery>\n    )\n}","import styled from '@emotion/styled';\n\nexport const SearchBarHeader = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 999;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #392b3754;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #140e1294;\n  border-radius: 8px;\n  overflow: hidden;\n`;\n\nexport const SearchFormBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-color: #5d425b;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormBtnLabel = styled.span`\n  position: absolute;\n  width: 16px;\n  height: 16px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 24px;\n  padding-right: 4px;\n  background-color: #140e1200;\n  color: #ffffff;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n    color: #ffffff;\n  }\n`;\n","import React, { useState } from \"react\";\nimport Notiflix from 'notiflix';\nimport { FaSistrix } from 'react-icons/fa';\nimport {\n    SearchBarHeader,\n    SearchForm,\n    SearchInput,\n    SearchFormBtn,\n    SearchFormBtnLabel,\n  } from './SearchForm.styled';\n\nexport const SearchBar = ({onSubmit}) => {\n    const [searchQuery, setSearchQuery] = useState(\"\");\n\n    const onChange = ({ target }) => {\n        setSearchQuery(target.value);\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if (searchQuery.trim() === \"\") {\n            Notiflix.Notify.warning('Enter title of movie to search');\n            return;\n          }\n        onSubmit(searchQuery);\n        \n    }\n\n    return (\n      <SearchBarHeader>\n        <SearchForm onSubmit={handleSubmit}>\n          <SearchFormBtn type=\"submit\" className=\"button\">\n            <FaSistrix size=\"24px\" fill=\"#fff\" />\n            <SearchFormBtnLabel className=\"button-label\">\n              Search\n            </SearchFormBtnLabel>\n          </SearchFormBtn>\n\n          <SearchInput\n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"search\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={searchQuery}\n            onChange={onChange}\n          />\n        </SearchForm>\n      </SearchBarHeader>\n    )\n\n}","import { useEffect, useState } from 'react';\nimport {  useSearchParams } from 'react-router-dom';\nimport Notiflix from 'notiflix';\n\nimport { fetchMoviesBySearchWord } from 'services/api';\n\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { SearchBar } from 'components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  \n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQueryFromParams = searchParams.get('query');\n\n  useEffect(() => {\n    if (searchQueryFromParams === null) {\n      return;\n    }\n\n    try {\n      const getFilteredMovies = async () => {\n        const {\n          data: { results },\n        } = await fetchMoviesBySearchWord(searchQueryFromParams);\n\n        if (!results.length) {\n          Notiflix.Notify.warning(\n            'Oops, there are no movies by this search, try another title'\n          );\n        }\n        const filteredData = results.map(\n          ({ id, poster_path, original_title }) => ({\n            id,\n            poster_path,\n            original_title,\n          })\n        );\n        setMovies(filteredData);\n      };\n\n      getFilteredMovies();\n    } catch (err) {\n      console.log(err.message);\n    }\n  }, [searchQueryFromParams, searchParams]);\n\n  const handleSubmit = query => {\n     setSearchParams({query});\n  };\n\n  return (\n    <div>\n      <SearchBar onSubmit={handleSubmit}/>\n      {movies && (\n        <MovieList movies={movies}/>       \n      )}\n    </div>\n  );\n};\n\nexport default Movies;","import axios from \"axios\";\n\nconst KEY = 'dafb4cf758741e9fd84f5c71b8506454';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMoviesData = async () => {\n    try {\n      return await axios.get(\n        `trending/movie/week?api_key=${KEY}`\n      );\n    } catch (err) {\n      console.log(err);\n    }\n};\n\nexport const fetchMovieInfo = async movieId => {\n    try {\n      return await axios.get(\n        `movie/${movieId}?api_key=${KEY}&language=en-US`\n      );\n    } catch (err) {\n      console.log(err);\n    }\n};\n\nexport const fetchMoviesBySearchWord = async searchWord => {\n    try {\n      return await axios.get(\n        `search/movie?api_key=${KEY}&language=en-US&query=${searchWord}&page=1`\n      );\n    } catch (err) {\n      console.log(err);\n    }\n};\n\nexport const fetchMovieCast = async movieId => {\n    try {\n      return await axios.get(\n        `movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n      );\n    } catch (err) {\n      console.log(err);\n    }\n};\n  \nexport const fetchMovieReviews = async movieId => {\n    try {\n      return await axios.get(\n        `movie/${movieId}/reviews?api_key=${KEY}&language=en-US`\n      );\n    } catch (err) {\n      console.log(err);\n    }\n};\n\n  "],"names":["TrendingItem","styled","ImgBox","TrendingGallery","TitleMovieBox","PosterImg","MovieList","movies","altText","imageHeight","location","useLocation","map","id","poster_path","title","original_title","alt","height","imgUrl","to","state","from","src","width","SearchBarHeader","SearchForm","SearchFormBtn","SearchFormBtnLabel","SearchInput","SearchBar","onSubmit","useState","searchQuery","setSearchQuery","event","preventDefault","trim","Notiflix","type","className","size","fill","autoComplete","name","autoFocus","placeholder","value","onChange","target","setMovies","useSearchParams","searchParams","setSearchParams","searchQueryFromParams","get","useEffect","getFilteredMovies","fetchMoviesBySearchWord","results","data","length","filteredData","err","console","log","message","query","KEY","axios","fetchTrendingMoviesData","fetchMovieInfo","movieId","searchWord","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}