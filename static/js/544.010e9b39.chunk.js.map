{"version":3,"file":"static/js/544.010e9b39.chunk.js","mappings":"4NAEaA,EAAeC,EAAAA,EAAAA,GAAH,ofAmBZC,EAASD,EAAAA,EAAAA,IAAH,sBAENE,EAAkBF,EAAAA,EAAAA,GAAH,4HAQfG,EAAgBH,EAAAA,EAAAA,IAAH,8KAUbI,EAAYJ,EAAAA,EAAAA,IAAH,kD,SCnCTK,EAAY,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,YAElCC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACR,EAAD,UACCI,EAAOK,KAAI,YAAiD,IAA9CC,EAA6C,EAA7CA,GAAIC,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,eAC/BC,EAAMT,GAAWO,EACjBG,EAAST,GAAe,MACxBU,EAASL,EAAW,0CACaA,GACnC,iGAEJ,OACE,SAACd,EAAD,WACE,UAAC,KAAD,CAAMoB,GAAE,kBAAaP,GAAMQ,MAAO,CAAEC,KAAMZ,GAA1C,WACE,SAACR,EAAD,WACE,SAACG,EAAD,CAAWkB,IAAKJ,EAAQF,IAAKA,EAAKO,MAAM,MAAMN,OAAQA,OAExD,SAACd,EAAD,WACE,wBAAKY,GAAkCD,UAN1BF,EAWtB,KAGN,C,gHCDD,UA5Ba,WACX,OAA4BY,EAAAA,EAAAA,UAAS,IAArC,eAAOlB,EAAP,KAAemB,EAAf,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WACR,IACE,IAAMC,EAAiB,mCAAG,yGAGdC,EAAAA,EAAAA,MAHc,gBAEdC,EAFc,EAEtBC,KAAQD,QAGJE,EAAeF,EAAQlB,KAAI,kBAAiC,CAChEC,GAD+B,EAAGA,GAElCC,YAF+B,EAAOA,YAGtCC,MAH+B,EAAoBA,MAApB,IAKjCW,EAAUM,GAVc,2CAAH,qDAYvBJ,GAGD,CAFC,MAAOK,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,KAGD,SAAC,IAAD,CAAW1B,OAAQA,GAEtB,C,mMC5BK6B,EAAM,mCACZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMR,EAAuB,mCAAG,uGAEpBQ,EAAAA,EAAAA,IAAA,sCACoBD,IAHA,wEAMjCF,QAAQC,IAAR,MANiC,wDAAH,qDAUvBG,EAAc,mCAAG,WAAMC,GAAN,0FAEXF,EAAAA,EAAAA,IAAA,gBACFE,EADE,oBACiBH,EADjB,oBAFW,wEAMxBF,QAAQC,IAAR,MANwB,wDAAH,sDAUdK,EAAuB,mCAAG,WAAMC,GAAN,0FAEpBJ,EAAAA,EAAAA,IAAA,+BACaD,EADb,iCACyCK,EADzC,YAFoB,wEAMjCP,QAAQC,IAAR,MANiC,wDAAH,sDAUvBO,EAAc,mCAAG,WAAMH,GAAN,0FAEXF,EAAAA,EAAAA,IAAA,gBACFE,EADE,4BACyBH,EADzB,oBAFW,wEAMxBF,QAAQC,IAAR,MANwB,wDAAH,sDAUdQ,EAAiB,mCAAG,WAAMJ,GAAN,0FAEdF,EAAAA,EAAAA,IAAA,gBACFE,EADE,4BACyBH,EADzB,oBAFc,wEAM3BF,QAAQC,IAAR,MAN2B,wDAAH,qD","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const TrendingItem = styled.li`\n  border-radius: 8px;\n  overflow: hidden;\n  background-color: #49248a;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  width: 352px;\n  transition-duration: 250ms;\n  transition-property: scale;\n  transition-timing-function: ease-in-out;\n  &:hover {\n    scale: 1.02;\n    box-shadow: 0px 1px 2px rgb(255 0 249 / 31%),\n      0px 2px 4px rgb(255 0 245 / 50%), 0px 4px 8px rgb(255 235 0 / 31%),\n      0px 8px 16px rgb(255 247 254 / 35%);\n  }\n`;\n\nexport const ImgBox = styled.div``;\n\nexport const TrendingGallery = styled.ul`\n  padding: 32px 0;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const TitleMovieBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 60px;\n  padding: 16px 0;\n  text-align: center;\n  font-size: 12px;\n`;\n\nexport const PosterImg = styled.img`\n  object-fit: cover;\n  \n`;","import { Link , useLocation } from \"react-router-dom\";\nimport { TrendingGallery, \n    TrendingItem, \n    ImgBox,\n    TitleMovieBox, PosterImg } from \"./MovieList.styled\";\n\nexport const MovieList = ({movies, altText, imageHeight}) => {\n   \n    const location = useLocation();\n    return (\n      <TrendingGallery>\n      {movies.map(({ id, poster_path, title, original_title }) => {\n        const alt = altText || title;\n        const height = imageHeight || \"528\";\n        const imgUrl = poster_path\n          ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n          : \"https://as1.ftcdn.net/v2/jpg/01/41/48/32/1000_F_141483247_cvrudefB00p8qNxoapWW54jjm3LzXFgz.jpg\";\n        \n        return (\n          <TrendingItem key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <ImgBox>\n                <PosterImg src={imgUrl} alt={alt} width=\"352\" height={height} />\n              </ImgBox>\n              <TitleMovieBox>\n                <h2>{original_title ? original_title : title}</h2>\n              </TitleMovieBox>\n            </Link>\n          </TrendingItem>\n        );\n      })}\n    </TrendingGallery>\n    )\n}","import { useEffect, useState } from 'react';\nimport { fetchTrendingMoviesData } from 'services/api';\nimport { MovieList } from 'components/MovieList/MovieList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  \n  useEffect(() => {\n    try {\n      const getTrendingMovies = async () => {\n        const {\n          data: { results },\n        } = await fetchTrendingMoviesData();\n\n        const filteredData = results.map(({ id, poster_path, title }) => ({\n          id,\n          poster_path,\n          title,\n        }));\n        setMovies(filteredData);\n      };\n      getTrendingMovies();\n    } catch (err) {\n      console.log(err);\n    }\n  }, []);\n\n  return (\n    <MovieList movies={movies}/>\n  );\n};\n\nexport default Home;","import axios from \"axios\";\n\nconst KEY = 'dafb4cf758741e9fd84f5c71b8506454';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMoviesData = async () => {\n    try {\n      return await axios.get(\n        `trending/movie/week?api_key=${KEY}`\n      );\n    } catch (err) {\n      console.log(err);\n    }\n};\n\nexport const fetchMovieInfo = async movieId => {\n    try {\n      return await axios.get(\n        `movie/${movieId}?api_key=${KEY}&language=en-US`\n      );\n    } catch (err) {\n      console.log(err);\n    }\n};\n\nexport const fetchMoviesBySearchWord = async searchWord => {\n    try {\n      return await axios.get(\n        `search/movie?api_key=${KEY}&language=en-US&query=${searchWord}&page=1`\n      );\n    } catch (err) {\n      console.log(err);\n    }\n};\n\nexport const fetchMovieCast = async movieId => {\n    try {\n      return await axios.get(\n        `movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n      );\n    } catch (err) {\n      console.log(err);\n    }\n};\n  \nexport const fetchMovieReviews = async movieId => {\n    try {\n      return await axios.get(\n        `movie/${movieId}/reviews?api_key=${KEY}&language=en-US`\n      );\n    } catch (err) {\n      console.log(err);\n    }\n};\n\n  "],"names":["TrendingItem","styled","ImgBox","TrendingGallery","TitleMovieBox","PosterImg","MovieList","movies","altText","imageHeight","location","useLocation","map","id","poster_path","title","original_title","alt","height","imgUrl","to","state","from","src","width","useState","setMovies","useEffect","getTrendingMovies","fetchTrendingMoviesData","results","data","filteredData","err","console","log","KEY","axios","fetchMovieInfo","movieId","fetchMoviesBySearchWord","searchWord","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}