{"version":3,"file":"static/js/387.7a0079ba.chunk.js","mappings":"0QAEaA,EAAcC,EAAAA,EAAAA,GAAH,0HAQXC,EAAaD,EAAAA,EAAAA,GAAH,8P,mBCwCvB,EA7CgB,WACd,OAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QA0BR,OAjBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,gHAILC,EAAAA,EAAAA,IAAkBJ,GAJb,uBAGLK,EAHK,EAGbC,KAAQD,QAGVN,EAA6BM,EAbtBE,KAAI,kBAAsB,CACnCC,GADa,EAAGA,GAEhBC,QAFa,EAAOA,QAAP,KAOI,kBAQRX,GARQ,gCAUfY,QAAQC,IAAI,KAAIC,SAVD,yDAAH,qDAahBT,GACD,GAAE,CAACH,EAASF,KAGX,SAACJ,EAAD,UACII,EAAQe,OAGRf,EAAQS,KAAI,YAAsB,IAAnBC,EAAkB,EAAlBA,GAAIC,EAAc,EAAdA,QACjB,OACE,SAACb,EAAD,WACE,uBAAIa,KADWD,EAIpB,KARD,cAAGM,UAAU,MAAb,4CAYP,C,mMC9CKC,EAAM,mCACZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAuB,mCAAG,uGAEpBD,EAAAA,EAAAA,IAAA,sCACoBD,IAHA,wEAMjCL,QAAQC,IAAR,MANiC,wDAAH,qDAUvBO,EAAc,mCAAG,WAAMlB,GAAN,0FAEXgB,EAAAA,EAAAA,IAAA,gBACFhB,EADE,oBACiBe,EADjB,oBAFW,wEAMxBL,QAAQC,IAAR,MANwB,wDAAH,sDAUdQ,EAAuB,mCAAG,WAAMC,GAAN,0FAEpBJ,EAAAA,EAAAA,IAAA,+BACaD,EADb,iCACyCK,EADzC,YAFoB,wEAMjCV,QAAQC,IAAR,MANiC,wDAAH,sDAUvBU,EAAc,mCAAG,WAAMrB,GAAN,0FAEXgB,EAAAA,EAAAA,IAAA,gBACFhB,EADE,4BACyBe,EADzB,oBAFW,wEAMxBL,QAAQC,IAAR,MANwB,wDAAH,sDAUdP,EAAiB,mCAAG,WAAMJ,GAAN,0FAEdgB,EAAAA,EAAAA,IAAA,gBACFhB,EADE,4BACyBe,EADzB,oBAFc,wEAM3BL,QAAQC,IAAR,MAN2B,wDAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewsList = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  padding: 24px;\n`;\n\nexport const ReviewItem = styled.li`\n  border-radius: 4px;\n  background-color: #221c21;\n  padding: 20px;\n  box-shadow: 0px 1px 2px rgb(255 158 0 / 40%), 0px 2px 4px rgb(255 0 245 / 30%),\n    0px 4px 8px rgb(255 221 0 / 40%), 0px 4px 16px rgb(255 247 254 / 10%);\n`;","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReviewItem, ReviewsList } from './Reviews.styled';\nimport { fetchMovieReviews } from 'services/api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  const normalizedReviews = arr => {\n    return arr.map(({ id, content }) => ({\n      id,\n      content,\n    }));\n  };\n\n  useEffect(() => {\n    const getReviews = async () => {\n      try {\n        const {\n          data: { results },\n        } = await fetchMovieReviews(movieId);\n\n        setReviews(normalizedReviews(results));\n\n        return reviews;\n      } catch (err) {\n        console.log(err.message);\n      }\n    };\n    getReviews();\n  }, [movieId, reviews]);\n\n  return (\n    <ReviewsList>\n      {!reviews.length ? (\n        <p className=\"msg\">Probably there are no reviews</p>\n      ) : (\n        reviews.map(({ id, content }) => {\n          return (\n            <ReviewItem key={id}>\n              <p>{content}</p>\n            </ReviewItem>\n          );\n        })\n      )}\n    </ReviewsList>\n  );\n};\n\nexport default Reviews;","import axios from \"axios\";\n\nconst KEY = 'dafb4cf758741e9fd84f5c71b8506454';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMoviesData = async () => {\n    try {\n      return await axios.get(\n        `trending/movie/week?api_key=${KEY}`\n      );\n    } catch (err) {\n      console.log(err);\n    }\n};\n\nexport const fetchMovieInfo = async movieId => {\n    try {\n      return await axios.get(\n        `movie/${movieId}?api_key=${KEY}&language=en-US`\n      );\n    } catch (err) {\n      console.log(err);\n    }\n};\n\nexport const fetchMoviesBySearchWord = async searchWord => {\n    try {\n      return await axios.get(\n        `search/movie?api_key=${KEY}&language=en-US&query=${searchWord}&page=1`\n      );\n    } catch (err) {\n      console.log(err);\n    }\n};\n\nexport const fetchMovieCast = async movieId => {\n    try {\n      return await axios.get(\n        `movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n      );\n    } catch (err) {\n      console.log(err);\n    }\n};\n  \nexport const fetchMovieReviews = async movieId => {\n    try {\n      return await axios.get(\n        `movie/${movieId}/reviews?api_key=${KEY}&language=en-US`\n      );\n    } catch (err) {\n      console.log(err);\n    }\n};\n\n  "],"names":["ReviewsList","styled","ReviewItem","useState","reviews","setReviews","movieId","useParams","useEffect","getReviews","fetchMovieReviews","results","data","map","id","content","console","log","message","length","className","KEY","axios","fetchTrendingMoviesData","fetchMovieInfo","fetchMoviesBySearchWord","searchWord","fetchMovieCast"],"sourceRoot":""}